{"version":3,"file":"static/js/106.832ff04a.chunk.js","mappings":"0NAKMA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,EAAgB,4NA2HjC,UA5Ge,SAAC,GAWT,IAAD,IATJE,aAAAA,OASI,MATW,oBASX,MARJC,UAAAA,OAQI,MARQ,oBAQR,EAPJC,EAOI,EAPJA,SAOI,IANJC,QAAAA,OAMI,MANK,EAML,MALJC,GAAAA,OAKI,MALC,IAKD,MALMC,GAAAA,OAKN,MALU,EAKV,MAJJC,GAAAA,OAII,MAJC,SAID,EAFJC,EAEI,EAFJA,OAIA,GAAiBC,EAAAA,EAAAA,UAAS,IAAIC,MAAMF,IAA7BG,GAAP,eACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,kBAAMF,EAASD,EAAMI,OAASJ,EAAMK,WAE9C,IACA,GAAgCP,EAAAA,EAAAA,UAAS,IAAzC,eAAOQ,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAeC,GACtB,IAAMC,EAASC,KAAKC,MAAMH,EAAQ,IAC5BI,EAAaJ,EAAiB,GAATC,EAC3B,MAAM,GAAN,OAAUA,EAAV,YAAoBG,GAAc,EAAd,WAAsBA,GAAeA,GAG3D,OACE,+BACE,UAAC,KAAD,CAAMC,WAAS,EACfC,SAAU,EACVC,GAAI,CACFC,WAAY,SACZC,eAAgB,gBAChB5B,aAAc,CAACA,aAAAA,GACfC,UAAW,CAACA,UAAAA,GACZC,SAAU,CAACA,SAAAA,IAPb,WAUE,SAAC,KAAD,CAAM2B,MAAI,EACVzB,GAAI,EACJ0B,IAAK,IAAKxB,GAAIA,EAFd,UAIE,SAAC,IAAD,CACA,aAAYK,EAAS,OAAS,QAC9BoB,QAAS,kBAAMnB,GAAWD,IAF1B,SAIGA,GACC,SAAC,IAAD,CAAce,GAAI,CAACM,MAAO,QAASC,SAAU,WAG7C,SAAC,IAAD,CAAkBP,GAAI,CAACM,MAAO,QAASC,SAAU,eAQvD,SAAC,KAAD,CAAMJ,MAAI,EACVzB,GAAIA,EAAIC,GAAIA,EACZ6B,GAAI,GAFJ,UAIE,SAACrC,EAAD,CACAsC,KAAK,QACL,aAAW,iBACXhB,MAAOH,EACPoB,IAAK,EACLC,IAlDS,IAmDTC,KAAM,EACNC,SAAU,SAACC,EAAGrB,GAAJ,OAAcF,EAAYE,SAKtC,SAAC,KAAD,CAAMU,MAAI,EACVY,MAAM,sBACNrC,GAAID,EAFJ,UAIE,UAAC,IAAD,CACAuC,UAAU,MACVC,QAAQ,OACRX,MAAM,QACNC,SAAS,sBACTW,WAAY,IACZC,WAAW,UACXnB,GAAI,CACFiB,QAAS,CACPtC,GAAI,OAAQyC,GAAI,SATpB,WAaE,SAAC,IAAD,CAAKL,MAAM,cAAX,SACGvB,EAAeF,KAdpB,KAkBE,SAAC,IAAD,CAAKyB,MAAM,cAAX,SACGvB,EAhFI,IAgFsBF","sources":["components/app/player.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Slider, Box, IconButton, Typography, Grid } from '@mui/material';\r\nimport { PauseRounded, PlayArrowRounded } from '@mui/icons-material';\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst MySlider = styled(Slider) (() => `\r\n  color: #7A66CC;\r\n  & .MuiSlider-rail {\r\n    color: white;\r\n    opacity: 1;\r\n    \r\n  }\r\n  & .MuiSlider-thumb {\r\n    box-shadow: 0 0 0 0;\r\n    height: calc(1em + 0.3vw);\r\n    width: 2px;\r\n  }\r\n  `\r\n)\r\n\r\nconst Player = ({ \r\n\r\n  marginBottom = 'calc(1em + 0.8vw)', \r\n  marginTop = 'calc(1em + 0.5vw)',\r\n  maxWidth,\r\n  lgTimer= 1 ,\r\n  lg = 9.8, xs= 8,\r\n  mr = '-2.5vw',\r\n\r\n  tracks\r\n\r\n}) => {\r\n\r\n  const [audio] =  useState(new Audio(tracks))\r\n  const [paused, setPaused] = useState(false)\r\n  useEffect(() => paused ? audio.play() : audio.pause())\r\n\r\n  const duration = 200\r\n  const [position, setPosition] = useState(59)\r\n\r\n  function formatDuration(value) {\r\n    const minute = Math.floor(value / 60)\r\n    const secondLeft = value - minute * 60\r\n    return `${minute}:${secondLeft <= 9 ? `0${secondLeft}` : secondLeft}`\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container\r\n      flexGrow={1} \r\n      sx={{\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginBottom: {marginBottom},\r\n        marginTop: {marginTop},\r\n        maxWidth: {maxWidth}\r\n      }}\r\n      >\r\n        <Grid item \r\n        lg={1}\r\n        ml={-2.5} mr={mr}\r\n        >\r\n          <IconButton \r\n          aria-label={paused ? 'play' : 'pause'}\r\n          onClick={() => setPaused(!paused)}\r\n          >\r\n            {paused ? (\r\n              <PauseRounded sx={{color: 'white', fontSize: '45px'}} />\r\n\r\n            ) : (\r\n              <PlayArrowRounded sx={{color: 'white', fontSize: '45px'}} />\r\n\r\n            )}\r\n\r\n          </IconButton>\r\n\r\n        </Grid>\r\n\r\n        <Grid item \r\n        lg={lg} xs={xs}\r\n        pt={0.4}\r\n        >\r\n          <MySlider\r\n          size=\"small\"\r\n          aria-label=\"time-indicator\"\r\n          value={position}\r\n          min={0}\r\n          max={duration}\r\n          step={1}\r\n          onChange={(_, value) => setPosition(value)}\r\n          />\r\n\r\n        </Grid>\r\n\r\n        <Grid item \r\n        width='calc(1.3em + 5.5vw)'\r\n        lg={lgTimer} \r\n        >\r\n          <Typography\r\n          component='div'\r\n          display='flex'\r\n          color=\"white\"\r\n          fontSize='calc(0.7em + 0.3vw)'\r\n          fontWeight={500}\r\n          fontFamily='Poppins'\r\n          sx={{\r\n            display: {\r\n              xs: 'none', sm: 'flex'\r\n            }\r\n          }}\r\n          >\r\n            <Box width='calc(2.2em)'>\r\n              {formatDuration(position)}\r\n            </Box>\r\n            \r\n            - \r\n            <Box width='calc(2.2em)'>\r\n              {formatDuration(duration - position)}\r\n            </Box>\r\n\r\n          </Typography>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Player;"],"names":["MySlider","styled","Slider","marginBottom","marginTop","maxWidth","lgTimer","lg","xs","mr","tracks","useState","Audio","audio","paused","setPaused","useEffect","play","pause","position","setPosition","formatDuration","value","minute","Math","floor","secondLeft","container","flexGrow","sx","alignItems","justifyContent","item","ml","onClick","color","fontSize","pt","size","min","max","step","onChange","_","width","component","display","fontWeight","fontFamily","sm"],"sourceRoot":""}